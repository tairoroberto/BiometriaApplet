package br.com.zanthus;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.sun.jna.win32.StdCallLibrary;  
import com.sun.jna.Native;
import com.sun.jna.*;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.IntByReference;
import javax.swing.JOptionPane;
import java.lang.String;
import java.io.File;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class Principal extends javax.swing.JFrame {

    public interface CIS_SDK extends StdCallLibrary   
    {
        CIS_SDK INSTANCE = (CIS_SDK)Native.loadLibrary("CIS_SDK.dll", CIS_SDK.class);
        
        public int CIS_SDK_Biometrico_Iniciar(int intDetectarFake);
        public int CIS_SDK_Biometrico_Finalizar();     
        public int CIS_SDK_Biometrico_LerDigital(PointerByReference pTemplate);
        public Pointer CIS_SDK_Biometrico_LerDigital_RetornoPonteiro(IntByReference iRetorno);
        public int CIS_SDK_Biometrico_CancelarLeitura();
        public int CIS_SDK_Biometrico_CompararDigital(PointerByReference pAmostra1, PointerByReference pAmostra2);
        public Pointer CIS_SDK_Versao();
    } 
    
      
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDedo1 = new javax.swing.JButton();
        lblVersao = new javax.swing.JLabel();
        btnComparar = new javax.swing.JButton();
        btnDedo2 = new javax.swing.JButton();
        btnVersao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CIS SDK Java");
        setResizable(false);

        btnDedo1.setText("Ler digital - Dedo 1");
        btnDedo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDedo1ActionPerformed(evt);
            }
        });

        lblVersao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblVersao.setText("Versão SDK");

        btnComparar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnComparar.setText("Comparar as 2 digitais");
        btnComparar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompararActionPerformed(evt);
            }
        });

        btnDedo2.setText("Ler digital - Dedo 2");
        btnDedo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDedo2ActionPerformed(evt);
            }
        });

        btnVersao.setText("Ler DLL (Versão SDK)");
        btnVersao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVersaoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Ler e comprar as digitais");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Teste de conex?o com a DLL");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Pasta das digitais: C:\\CIS_SDK\\DIGITAIS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnVersao, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(btnDedo1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDedo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblVersao)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnComparar, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(143, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(20, 20, 20))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVersao)
                    .addComponent(lblVersao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDedo1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComparar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDedo2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDedo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDedo1ActionPerformed
        // TODO add your handling code here:

        // Instanciar a DLL
        CIS_SDK dll = CIS_SDK.INSTANCE;     
        
        //  Inicilizar o SDK
        //    Parametro para iniciar:
        //    0 - Iniciar sem detecta??o de dedo falso
        //    1 - Iniciar com detecta??o de dedo falso (LFD Fake) - necessario leitor compativel 
        int iRetorno = dll.CIS_SDK_Biometrico_Iniciar(0); 
          if (iRetorno != 1) 
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }        
                       
          
        // Capturar a digital no leitor   
        Pointer pDigital;
        IntByReference iRet = new IntByReference();
        pDigital = dll.CIS_SDK_Biometrico_LerDigital_RetornoPonteiro(iRet);
        int iRetorno2 = iRet.getValue();
          if (iRetorno2 != 1)
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno2));              
            return;
          }                         
        byte[] buffer = pDigital.getByteArray(0, 669);
         
        
        // Criar a pasta e apagar a digital anterior
        new File("C:/CIS_SDK/DIGITAIS").mkdir();  
        File file = new File("C:/CIS_SDK/DIGITAIS/Template1.tpl");  
        file.delete();  
        
        
        // Gravar a digital em um arquivo
        File arquivo = new File("C:/CIS_SDK/DIGITAIS/Template1.tpl");
        try (FileOutputStream arq = new FileOutputStream(arquivo)) 
        {
           arq.write(buffer);
           arq.flush();
           arq.close();    
        }
        catch (IOException e)
          {
            e.printStackTrace();      
            JOptionPane.showMessageDialog(null, "Erro !!! ");              
          }                              
          

        // Finalizar o SDK        
       iRetorno = dll.CIS_SDK_Biometrico_Finalizar(); 
          if (iRetorno != 1)
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }

        JOptionPane.showMessageDialog(null, "Digital 1 capturada");

    }//GEN-LAST:event_btnDedo1ActionPerformed

    private void btnCompararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompararActionPerformed
        // TODO add your handling code here:
        
        // Instanciar a DLL
        CIS_SDK dll = CIS_SDK.INSTANCE;     
        
        //  Inicilizar o SDK
        //    Parametro para iniciar:
        //    0 - Iniciar sem detecta??o de dedo falso
        //    1 - Iniciar com detecta??o de dedo falso (LFD Fake) - necessario leitor compativel 
        int iRetorno = dll.CIS_SDK_Biometrico_Iniciar(0); 
          if (iRetorno == 1)  {
            Pointer p;
            p = dll.CIS_SDK_Versao();
            String val = p.getString(0);
            lblVersao.setText(val);          
          }
          else  {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }        
                     
        
        // Ler os arquivos das duas digitais e compara-las  
        try
        {
            // Ler o primeiro arquivo de digitais
            File file = new File("C:/CIS_SDK/DIGITAIS/Template1.tpl");
            FileInputStream fis = new FileInputStream(file);      
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[669];
                for (int readNum; (readNum = fis.read(buf)) != -1;)  {
                   bos.write(buf, 0, readNum); }
            byte[] buffer1 = bos.toByteArray();            
            
            // Ler o segundo arquivo de digitais
            File file2 = new File("C:/CIS_SDK/DIGITAIS/Template2.tpl");
            FileInputStream fis2 = new FileInputStream(file2);      
            ByteArrayOutputStream bos2 = new ByteArrayOutputStream();
            byte[] buf2 = new byte[669];
                for (int readNum; (readNum = fis2.read(buf2)) != -1;)  {
                   bos2.write(buf2, 0, readNum); }
            byte[] buffer2 = bos2.toByteArray();            
            
                
            // Alocar o conteudo dos arquivos nos ponteiros 
            final Pointer p1 = new Memory(669);
            p1.write(0, buffer1, 0, buffer1.length);
            final PointerByReference pr1 = new PointerByReference();
            pr1.setPointer(p1);   
                       
            Pointer p2 = new Memory(669);
            p2.write(0, buffer2, 0, buffer2.length);
            PointerByReference pr2 = new PointerByReference();
            pr2.setPointer(p2);


                        
            // Comparar as duas digitais
            iRetorno = dll.CIS_SDK_Biometrico_CompararDigital(pr1, pr2);
            if (iRetorno == 1)
            {   
               JOptionPane.showMessageDialog(null, "As digitais são iguais");   }
            else if (iRetorno == -2)          
            {        
               JOptionPane.showMessageDialog(null, "As digitais são diferentes"); }
            else
            {
               JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));                           
            }            
            
        }
        catch (IOException e){
            e.printStackTrace(); 
            JOptionPane.showMessageDialog(null, "Erro !!! ");              
        }

      
       // Finalizar o SDK 
       iRetorno = dll.CIS_SDK_Biometrico_Finalizar(); 
          if (iRetorno != 1)
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }

    }//GEN-LAST:event_btnCompararActionPerformed

    private void btnVersaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVersaoActionPerformed
    // TODO add your handling code here:
        
        // Instanciar a DLL
        CIS_SDK dll = CIS_SDK.INSTANCE;     
        
        Pointer p;
        p = dll.CIS_SDK_Versao();
        String val = p.getString(0);
        lblVersao.setText("CIS SDK - v." + val);          
                    
                     
    }//GEN-LAST:event_btnVersaoActionPerformed

    private void btnDedo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDedo2ActionPerformed
        // TODO add your handling code here:
        // Instanciar a DLL
        CIS_SDK dll = CIS_SDK.INSTANCE;     
        
        //  Inicilizar o SDK
        //    Parametro para iniciar:
        //    0 - Iniciar sem detecta??o de dedo falso
        //    1 - Iniciar com detecta??o de dedo falso (LFD Fake) - necessario leitor compativel 
        int iRetorno = dll.CIS_SDK_Biometrico_Iniciar(0); 
          if (iRetorno != 1) 
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }        
                       
          
        // Capturar a digital no leitor   
        Pointer pDigital;
        IntByReference iRet = new IntByReference();
        pDigital = dll.CIS_SDK_Biometrico_LerDigital_RetornoPonteiro(iRet);
        int iRetorno2 = iRet.getValue();
          if (iRetorno2 != 1)
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno2));              
            return;
          }                         
        byte[] buffer = pDigital.getByteArray(0, 669);
        
        
        // Criar a pasta e apagar a digital anterior
        new File("C:/CIS_SDK/DIGITAIS").mkdir();  
        File file = new File("C:/CIS_SDK/DIGITAIS/Template2.tpl");  
        file.delete();  
        
        
        // Gravar a digital em um arquivo
        File arquivo = new File("C:/CIS_SDK/DIGITAIS/Template2.tpl");
        try (FileOutputStream arq = new FileOutputStream(arquivo)) 
        {
           arq.write(buffer);
           arq.flush();
           arq.close();    
        }
        catch (IOException e)
          {
            e.printStackTrace();      
            JOptionPane.showMessageDialog(null, "Erro !!! ");              
          }                              
          

        // Finalizar o SDK        
       iRetorno = dll.CIS_SDK_Biometrico_Finalizar(); 
          if (iRetorno != 1)
          {
            JOptionPane.showMessageDialog(null, "Erro: " + Integer.toString(iRetorno));              
            return;
          }

        JOptionPane.showMessageDialog(null, "Digital 2 capturada");
        
    }//GEN-LAST:event_btnDedo2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComparar;
    private javax.swing.JButton btnDedo1;
    private javax.swing.JButton btnDedo2;
    private javax.swing.JButton btnVersao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblVersao;
    // End of variables declaration//GEN-END:variables
}






